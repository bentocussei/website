// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String    @unique
  password      String
  isAdmin       Boolean   @default(false)
  emailVerified DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  profile       UserProfile?
  activityLogs  ActivityLog[]
}

model UserProfile {
  id        String   @id @default(uuid())
  bio       String?
  avatarUrl String?
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ContactMessage {
  id        String   @id @default(uuid())
  name      String
  email     String
  subject   String?
  message   String
  timestamp DateTime @default(now())
}

model WaitingList {
  id                   String   @id @default(uuid())
  email                String   @unique
  name                 String?
  companyName          String?
  isDemoRequest        Boolean  @default(false)
  productVersion       String?
  productName          String
  registrationTimestamp DateTime @default(now())
}

model News {
  id        String   @id @default(uuid())
  title     String   @unique
  date      String
  summary   String
  content   String
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ActivityLog {
  id          String   @id @default(uuid())
  timestamp   DateTime @default(now())
  action      String
  details     Json?
  userId      String?
  user        User?     @relation(fields: [userId], references: [id], onDelete: SetNull)
  entityType  String?
  entityId    String?
  ipAddress   String?
  userAgent   String?
}
